							DAY 9
							
TOPICS COVERED :-

				SUB QUERIES
						COLUMNS
						TABLES
						CONDITION
				COLUMN : THERE IS DEPENDECY FOR THE EXECUTION OF THE SUBQUERY ON THE OUTER QUERY....
				
				OUTER QUERY EXECUTED FIRST AND THEN THE SUBQUERY EXECUTED...
				
				RELATIONSHIP CREATED BETWEEN OUTER QUERY AND SUB QUERY :-
					THAT COMPLETE QUERY CALLED AS 
							CORRELATED QUERIES...
							
				CORRELATED QUERIES...
				
-----------------------------------------------------------------------

PROVISION USE SUBQUERIRES WITH YOUR COMMANDS(CREATE , INSERT)....

********** WE HAVE TO CREATE A REPLICA TABLE OF EMLOYEES :- 

				FIRST : NEED TO CREATE THE STRUCTURE OF THE TABLE	
						WHICH WILL BE AS SAME AS EMPLOYEES
						
				SECOND : NEED TO COPY THE COMPLETE DATA FROM 	
						 EMPLOYEES TO THE NEW TABLE
		
				
		: LOOK THE EMPLOYEES AND THEN CREATE THE STRUCTURE FOR NEW TABLE...

			** 
				CREATE TABLE EMP_NEW LIKE EMPLOYEES;
			
				THIS STATEMENT WILL CREATE A TABLE EMP_NEW AS THE SAME STRUCTURE OF EMPLOYEES;
				
				
			** CREATE A TABLE WITH STRUCTURE AND DATA FROM THE ANOTHER TABLES....
	
					* SELECT * FROM EMPLOYEES;
					* CREATE STATEMENT...
				** MERGE THESE TWO STATEMENTS....
				
			CREATE TABLE EMP_NEW1 AS SELECT * FROM EMPLOYEES;
			
			
		** FIRST CREATE AND THEN INSERT 
			
			CREATE TABLE EMP_NEW LIKE EMPLOYEES;
				
			INSERT INTO EMP_NEW SELECT * FROM EMPLOYEES;
				
	------------------------------------------------------------			
	** DURING TRANSACION 
			SET OF QUERIES 
					WITH CALCULATION TO BE DONE...
					
			FOR THAT PERTICULAR DURATION
				YOU WANT TO KEEP CERTAIN RECORD IN THE MEMORY..
				
  TABLE : TEMPRORARY TABLE :- 

			THESE TABLES CREATE FOR THE SESSION
			AS THE SESSION OVER, THESE TABLE ARE WIPES OUT FROM THE DATABASE....
			
			SYNTAX :- SCOPE only for the session

			CREATE TEMPRORARY TABLE EMP_TEMP AS SELECT * FROM EMPLOYEES;
				
---------------------------------------------------------------------

*** 
	VIEWS :- 
	
		* VIEWS ARE USED TO ENCAPSULATE THE DATA FROM THE USER..
		* VIEWS NEVER CREATE ANOTHER SET OF TABLE IN THE DATABASE :- 
			ITS ONLY THE DEFINATION GET STORED....
		* RUN DYNAMICALLY

	SYNTAX :-

			CREATE OR RAPLCE -- ALLOWS YOU TO REPLACE THE DEFINATION OF 
								THE VIEW
					VIEW VIEW_NAME AS STATEMENT;
					
			
			CREATE OR REPLACE VIEW EMP_SAL_CHECK
				AS
			SELECT * FROM 
				EMPLOYEES E1
					WHERE 
					E1.SALARY > 
							(SELECT AVG(E2.SALARY) 
							FROM EMPLOYEES E2
							 WHERE E2.DEPARTMENT_ID = 20);		
			
		
CALL OR RUN YOUR VIEW :- 
	
			SELECT * FROM EMP_SAL_CHECK;
			* SYSTEM CHECK IN THE DATABASE THE SYNTAX FOR THE VIEW NAME
			* FIND THE SYNTAX THEN REPLACE THAT SYNTAX AND EXECUTE IT..
			
		SELECT * FROM 
				(
				SELECT * FROM 
				EMPLOYEES E1
					WHERE 
					E1.SALARY > 
							(SELECT AVG(E2.SALARY) 
							FROM EMPLOYEES E2
							 WHERE E2.DEPARTMENT_ID = 20)
				);

----------------------------------------------------------------------

	CREATE OR REPLACE VIEW EMPLOYEE_DATA 
	AS
	SELECT E.EMPLOYEE_ID,CONCAT(E.FIRST_NAME,', ',E.LAST_NAME) AS EMPNAME, E.HIRE_DATE , D.DEPARTMENT_NAME,L.street_address,
		C.COUNTRY_NAME,R.REGION_NAME	
			FROM EMPLOYEES E
			LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
			INNER JOIN LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID
			INNER JOIN COUNTRIES C ON C.COUNTRY_ID = L.COUNTRY_ID
			INNER JOIN REGIONS R ON R.REGION_ID = C.REGION_ID;

===============================================================

VIEWS : 
		VIEWS ALLOWS ME FOUR THINGS :- 
		
			1) SELECT 
			2) INSERT 
			3) UPDATE
			4) DELETE 
				ON YOUR VIEWS
				
			* FIRST WE ARE SAYING VIEW ARE NOT THE TABLES..
				* SECOND WE ARE SAYING WE CAN DO DML ON VIEWS...
				
		OVER HERE : WHEN WE RUN THE DML'S ON VIEWS..
			WE ARE DIRETLY TOUCHING THE DATABASE...
				DML'S ON THE VIEW..
					IT DIRECTLY IMPACTING THE DATABASE....
					
						
			============================================

			CREATE TABLE EMPVIEW
				(
					ID INT,
					NAME VARCHAR(20)
				);
			
			CREATE OR REPLACE VIEW EMPVIEW_VIEW
				AS 
					SELECT * FROM EMPVIEW WHERE NAME LIKE 'RA%';
				
	----------------------------------------------------------------			
			DEFINATLY YOU DO NOT WANT USER TO INSERT SOMETIING 
				WHICH IS NOT VIEWABLE TO THAT USER...
				
			RESTRICT USED BASED ON MY CONDITION TO INSERT SOMETHING 
				IN MY TABLE....
				
			WITH CHECK OPTION.....
			
			
		CREATE OR REPLACE VIEW EMPVIEW_VIEW
				AS 
				SELECT * FROM EMPVIEW WHERE NAME LIKE 'RA%'
					WITH CHECK OPTION;		
				
	INSERT ON THE VIEW...
	
		INSERT INTO EMPVIEW_VIEW VALUES(103,'KRISHAN');
		

EXPOSE MY DATABASE TO THE ENDUSER :- 
		ALWAYS CREATE VIEWS AND PROVIDE ACCESS ON THOSE BASED ON THE REQUIRNMENT....
		
		IF YOU WANT THEM VIEW CERTAIN COLUMN WITH CERTAIN PERMISSIO LIKE SELECT ....
		
		* CREATE VIEW WITH THAT CERTAIN COLUMN
		* GRANT YOUR USER ON VIEW WITH SELECT OPTION....

-------------------------------------------------------------------

		** VIEW NEVER INSERT AND UPDATE ON TWO TABLES AT THE SAME TIME..
		** VIEW ONLY ALLOW YOU TO INSERT OR UPDATE ON THOSE COLUMN 
			WHICH ARE THE PART OF YOUR VIEWS...
			
		** FEW THINGS :- 
				YOUR ALL MANDATORY COLUMNS NEED TO BE A PART OF VIEWS :
					IF YOU ARE USING VIEWS FOR INSERT AND UPDATE..
			MANDATORY  : NOT NULL.
				
				
		VIEW : SCOPE TILL ANYBODY EXPLICITLY DROP THE VIEWS...

		DROP :
			DROP VIEW VIEWNAME;
			
=======================================================================

INDEX : 
	
		INDEXES ARE USED TO IMPROVE THE PERFORMANCE OF YOUR QUERIES..
		
		
		SELECT * FROM EMPLOYEES WHERE EMP_ID = 104;
		
		INDEX CAN BE CREATED EXPLICITLT 
				OR WITH THE EXISTING SYNTAX...
				
		
		WHEN EVER YOU CREATE A KEYS : IT AUTOMATICALLY CREATE INDEX FOR THE SYSTEM
		
			PRIMARY KEY : CREATE INDEX AUTOMATICALLY...
			
				
			* STORE YOU ROWS INSIDE THE DATABASE 
				ALL ROWS STORED WITH A ADDRESS..
				
				101 RAHUL 2000 30
			ahghgJ1233343NKJ3K	

			* CREATE INDEX 
				
		CREATE A TABLE INSIDE THE DATABASE WITH A NAME..
			
			CONTAINS :- 
	ADDREES OF THE RECORD , COLUMN ON WHICH INDEX  
							CREATED WITH SORTED FORMAT..
							
				
				
				
	** INDEXES WILL BE LIMITED TO THE TABLES
		OTHERWISE : IT WILL SLOW DOWN THE DML'SALARY
	** SPEED UP THE SELECT ...
		
					
---------------------------------------------------------------------

  * COLUMN WHERE SERACH OPERATION IS TOO HIGH
  * OR YOUR COLUMNS ARE GETTING USE FOR JOINING N TABLES....
	FOR THOSE SCENARIOS, WE CAN CREATE INDEXES EXPLICITLY...
	
	CREATE INDEX INDEX_NAME ON TABLE(COLUMNNAME);
	
	
** NEED TO VIEW THE EXPLANATION  OF THE QUERY EXECUTION :-


	KEY WORD : 
			EXPLAIN
	
	
-------------------------------------------------------

	SET PROFILING = 1  --   GUIDING, INSTRUCTION TO THE SYSTEM	
							GOING FORWARDS KET THE RECORDS OF THE QUERY GETTING EXECUTED..
							
	SHOW PROFILE;
			LAST EXECUTION OF THE STATEMENT....
			
	NEED TO VIEW ALL THE PROFILES :- 
	
		SHOW PROFILES..
	
	
		show profile for query 10;
	
------------------------------------------------------------------------


















	
	
	
	
	
	
	


				
				
				
				